Prompt -> And_or Prompt | \n									firstof(Prompt) = {\n, <, >, >>, <<, E}

And_or -> Pipeline And_or1										firstof(And_or) = {(, <, >, >>, <<, w}
	And_or1 -> And_or2 And_or1 | epsilon						firstof(And_or1) = {||, &&, E}
		And_or2 -> || New_line Pipeline | && New_line Pipeline	firstof(And_or2) = {||, &&}

New_line -> \n New_line | epsilon								firstof(New_line) = {\n, E}

Pipeline -> Cmd Pipeline1										firstof(Pipeline) = {(, <, >, >>, <<, w}
	Pipeline1 -> pipe New_line Cmd Pipeline1 | epsilon			firstof(Pipeline1) = {pipe, E}

Cmd -> Parentheses | Prefixe Cmd1 | word Cmd2					firstof(Cmd) = {(, <, >, >>, <<, w}
	Cmd1 -> word Cmd2 | epsilon									firstof(Cmd1) = {w,E}
		Cmd2 -> Suffixe | epsilon								firstof(Cmd2) = {<, >, >>, <<, w, E}

Parentheses -> ( And_or )										firstof(Parentheses) = {(}

Prefixe -> I/O_Redirection Prefixe1								firstof(Prefixe) = {<, >, >>, <<}
	Prefixe1 -> I/O_Redirection Prefixe1 | epsilon				firstof(Prefixe1) = {<, >, >>, <<, E}

Suffixe -> word Suffixe1 | I/O_Redirection Suffixe1				firstof(Suffixe) = {<, >, >>, <<, w}
	Suffixe1 -> Suffixe2 Suffixe1 | epsilon						firstof(Suffixe1) = {<, >, >>, <<, w, E}
		Suffixe2 -> I/O_Redirection | word						firstof(Suffixe2) = {<, >, >>, <<, w}

I/O_Redirection -> < word | > word | >> word | << word			firstof(I/O_Rdeirection) = {<, >, >>, <<}
